version: 2.1

executors:
  executor-openjdk8:
    docker:
      - image: cimg/openjdk:8.0-node
        environment:
          # https://circleci.com/docs/2.0/java-oom/
          _JAVA_OPTIONS: "-Xms128m -Xmx2g"

  executor-openjdk11:
    docker:
      - image: cimg/openjdk:11.0-node
        environment:
          # https://circleci.com/docs/2.0/java-oom/
          _JAVA_OPTIONS: "-Xms128m -Xmx2g"

jobs:
  openjdk-build:
    parameters:
      scala-version:
        type: string
      executor-type:
        type: string
    executor: << parameters.executor-type >>
    environment:
      SCALA_VERSION: << parameters.scala-version >>
    steps: 
      - checkout
      - restore_cache:
          keys:
            - sbt-cache-{{ checksum "project/Versions.scala" }}
      - run:
          name: Executing cibuild
          command: ./scripts/test
      - store_test_results:
          path: modules/core-test/jvm/target/test-reports
      - store_test_results:
          path: modules/core-test/js/target/test-reports
      - save_cache:
          key: sbt-cache-{{ checksum "project/Versions.scala" }}
          paths:
            - "~/.ivy2/cache"
            - "~/.sbt"
            - "~/.cache/coursier"

  openjdk-deploy:
    parameters:
      scala-version:
        type: string
      executor-type:
        type: string
    executor: << parameters.executor-type >>
    environment:
      SCALA_VERSION: << parameters.scala-version >>
    steps: 
      - checkout
      - restore_cache:
          keys:
            - sbt-cache-{{ checksum "project/Versions.scala" }}
      - run:
          name: "Import signing key"
          command: |
            gpg --keyserver keyserver.ubuntu.com \
              --recv-keys 0x713F9F29598CFFF3 && \
            echo "${GPG_KEY}" | base64 -d > signing_key.asc && \
            gpg --import signing_key.asc
      - run:
          name: Executing cipublish
          command: ./scripts/cipublish

workflows:
  build:
    jobs:
      - openjdk-build:
          matrix:
            parameters:
              scala-version: ["2.12.15"]
              executor-type: ["executor-openjdk8"]
          # required since openjdk8-deploy has tag filters AND requires
          # openjdk8
          # https://circleci.com/docs/2.0/workflows/#executing-workflows-for-a-git-tag
          filters:
            tags:
              only:
                - /^(v.*)$/
      - openjdk-build:
          matrix:
            parameters:
              scala-version: ["2.13.8"]
              executor-type: ["executor-openjdk11"]
          # required since openjdk8-deploy has tag filters AND requires
          # openjdk8
          # https://circleci.com/docs/2.0/workflows/#executing-workflows-for-a-git-tag
          filters:
            tags:
              only:
                - /^(v.*)$/
      - openjdk-deploy:
          matrix:
            parameters:
              scala-version: ["2.12.15"]
              executor-type: ["executor-openjdk8"]
          context: sonatype-azavea-signing-key
          requires:
            - openjdk-build-executor-openjdk8-2.12.15
          filters:
            tags:
              only:
                - /^(v.*)$/
            branches:
              only:
                - master
      - openjdk-deploy:
          matrix:
            parameters:
              scala-version: ["2.13.8"]
              executor-type: ["executor-openjdk11"]
          context: sonatype-azavea-signing-key
          requires:
            - openjdk-build-executor-openjdk11-2.13.8
          filters:
            tags:
              only:
                - /^(v.*)$/
            branches:
              only:
                - master
